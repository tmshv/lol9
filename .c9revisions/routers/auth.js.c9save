{"ts":1350484254144,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1350484255342,"patch":[[{"diffs":[[1,"exports.register = function(req, res){\n    \n    var email = req.body.email;\n    var password = req.body.password;\n    var confirmationpassword = req.body.confirmationpassword;\n    var stayonline = req.body.stayonline;\n    //Проверяем введенные данные\n    var check = require('validator').check;\n    if (!check(email).len(6, 64).isEmail() ||\n        !check(password).notNull() ||\n        !check(password).equals(confirmationpassword)){\n        res.send({\n            error: true,\n            msg: 'Check your'\n        });\n        return;\n    }\n   //Регистрируем нового пользователя\n    global.controllers.users.register(email, password, function(error, user, msg){\n        if (error){\n            if (typeof msg == 'undefined' || msg===null ) msg = 'Register error'; \n            res.send({\n                error: true,\n                msg: msg\n            });    \n            return;\n        }\n        //Сразу авторизовываемся\n        req.session.authorized = true;\n        req.session.user_id = user._id;\n        req.session.username = user.email;  \n        //Если стоит галочка \"Запомнить меня\" то записываем сессию и передаем ее номер\n        if (stayonline){\n            global.controllers.stayonlinesessions.savesession(user._id, function(error, hash){\n                res.send({\n                    error: false,\n                    msg: 'Success register email: '+email,\n                    sessionid: hash\n                });    \n            });\n        }else{\n            res.send({\n                error: false,\n                msg: 'Success register email: '+email\n            });   \n        }\n    });   \n};"]],"start1":0,"start2":0,"length1":0,"length2":1618}]],"length":1618,"saved":false}
{"ts":1350484269497,"patch":[[{"diffs":[[0,");   \n};"],[1,"\n\nexports.login = function(req, res){\n    var email = req.body.email;\n    var password = req.body.password;  \n    var stayonline = req.body.stayonline;\n    global.controllers.users.checkuser(email, password, function(error, canlogin, user){\n        if (error || !canlogin){\n            res.send({\n                error: true,\n                msg: 'Check your email or password'\n            });\n            return;    \n        }\n        req.session.authorized = true;\n        req.session.user_id = user._id;\n        req.session.username = user.email;        \n        if (stayonline){\n            global.controllers.stayonlinesessions.savesession(user._id, function(error, hash){\n                res.send({\n                    error: false,\n                    msg: 'Success login email: '+user.email,\n                    sessionid: hash\n                });    \n            });\n        } else {\n            \n            res.send({\n                error: false,\n                msg: 'Success login email: '+user.email\n            });\n        }\n    });\n};"]],"start1":1610,"start2":1610,"length1":8,"length2":1059}]],"length":2669,"saved":false}
{"ts":1350484277955,"patch":[[{"diffs":[[0,"  });\n};"],[1,"\n\nexports.logout = function(req, res){\n    if (!req.session.authorized){\n        res.send({\n            error: true,\n            msg: 'You are not loggined'\n        });\n        return;      \n    }\n    req.session.authorized = false;\n    delete req.session.username;\n    delete req.session.user_id;\n    //Если номер сессии указан в куках, то удаляем его\n    if (typeof req.cookies.sessionid !== 'undefined' && req.cookies.sessionid !== ''){\n        global.controllers.stayonlinesessions.delsession(req.cookies.sessionid, function(error){\n            if (error){\n                console.log('Session was not deleted');    \n                return;\n            }            \n        });   \n    }\n    res.send({\n        error: false\n    });\n};"]],"start1":2661,"start2":2661,"length1":8,"length2":746}]],"length":3407,"saved":false}
{"ts":1350484286820,"patch":[[{"diffs":[[0,"false\n    });\n};"],[1,"\n\nexports.getlogin = function(req, res){\n    if (!req.session.authorized){\n        //Если пользователь не авторизирован, то проверяем нет ли данных о сохраненных сессиях\n        global.controllers.stayonlinesessions.getsession(req.cookies.sessionid, function(error, user){\n            if (error){\n                res.send({\n                    error: true,\n                    msg: 'You are not loggined'\n                });\n                return;\n            }\n            req.session.authorized = true;\n            req.session.user_id = user._id;\n            req.session.username = user.email;\n            res.send({\n                error: false,\n                displayname: req.session.username\n            });\n        });            \n    }else{\n        res.send({\n            error: false,\n            displayname: req.session.username\n        });\n    }\n};"]],"start1":3391,"start2":3391,"length1":16,"length2":878}]],"length":4269,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350499604120,"patch":[[{"diffs":[[0,"n(req, res){"],[-1,"\n"],[0,"    \n    var"]],"start1":26,"start2":26,"length1":25,"length2":24}]],"length":4268,"saved":false}
